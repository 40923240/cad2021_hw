var tipuesearch = {"pages": [{'title': 'About', 'text': 'You can call me "K",\xa0 I major in Mechanical Design Engineering at NFU.\xa0 Welcome to my website. \n \n Student Number:40923240 \n 網站倉儲:  https://github.com/40923240/cad2021_hw \n 網站連結:  https://40923240.github.io/cad2021_hw \n', 'tags': '', 'url': 'About.html'}, {'title': 'Task', 'text': '', 'tags': '', 'url': 'Task.html'}, {'title': 'Hwpages', 'text': 'https://github.com/mdecourse/cad2021/discussions/11 \n #2B每人個人網站\ndata = open(\'D:/abb52/Desktop/2bcad.txt\').readlines()\ndata = data[1:]\nfor i in range(len(data)):\n    num_github = data[i]\n    num = num_github.split("\\t")[0]\n    account = num_github.split("\\t")[1].strip()\n    if account == "":\n        account = num\n#print(num, account)\n    print("<a href=\'https://" + str(account) + ".github.io/cad2021_hw\'>"+ str(num) + "</a>") \n 2B cad2021_hw links list \n \n \n \n 40723126   40723135   40723217   40732331   40823114   40823115   40823117   40823119   40823122   40823127   40823146   40823148   40823215   40871106   40923201   40923203   40923204   40923205   40923206   40923207   40923208   40923209   40923210   40923211   40923212   40923213   40923214   40923216   40923217   40923218   40923219   40923220   40923221   40923223   40923224   40923225   40923226   40923227   40923228   40923229   40923230   40923231   40923232   40923233   40923234   40923235   40923236   40923237   40923238   40923239   40923240   40923241   40923242   40923243   40923244   40923245   40923246   40923247   40923248   40923249   40923250   40923251   40923252   40923253   40971220   40971227 \n', 'tags': '', 'url': 'Hwpages.html'}, {'title': 'Github Pages', 'text': '#2B每人github網站\ndata = open(\'D:/abb52/Desktop/2bcad.txt\').readlines()\ndata = data[1:]\nfor i in range(len(data)):\n\xa0\xa0\xa0\xa0num_github = data[i]\n\xa0\xa0\xa0\xa0num = num_github.split("\\t")[0]\n\xa0\xa0\xa0\xa0account = num_github.split("\\t")[1].strip()\n\xa0\xa0\xa0\xa0if account == "":\n\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0account = num\n#print(num, account)\n\xa0\xa0\xa0\xa0print("<a href=\'https://github.com" + str(account) + "/cad2021_hw\'>" +str(num) + "</a>") \n \xa0 2B github links \n \n 40723126   40723135   40723217   40732331   40823114   40823115   40823117   40823119   40823122   40823127   40823146   40823148   40823215   40871106   40923201   40923203   40923204   40923205   40923206   40923207   40923208   40923209   40923210   40923211   40923212   40923213   40923214   40923216   40923217   40923218   40923219   40923220   40923221   40923223   40923224   40923225   40923226   40923227   40923228   40923229   40923230   40923231   40923232   40923233   40923234   40923235   40923236   40923237   40923238   40923239   40923240   40923241   40923242   40923243   40923244   40923245   40923246   40923247   40923248   40923249   40923250   40923251   40923252   40923253   40971220   40971227 \n', 'tags': '', 'url': 'Github Pages.html'}, {'title': 'RUN', 'text': ' 導入 FileSaver 與 filereader  \n \n \n \n \n  導入 ace  \n \n \n \n \n \n \n  請注意, 這裡使用 Javascript 將 localStorage["py_src"] 中存在近端瀏覽器的程式碼, 由使用者決定存檔名稱 \n \n \n \n  印出版次與關鍵字程式  \n \n \n \n  用來顯示程式碼的 editor 區域  \n \n  以下的表單與按鈕與前面的 Javascript doSave 函式以及 FileSaver.min.js 互相配合  \n  存擋表單開始  Filename:  .py    存擋表單結束  \n \n  執行與清除按鈕開始  \n Run   Output   清除輸出區 清除繪圖區 Reload \n  執行與清除按鈕結束  \n \n  程式執行 ouput 區  \n \n  Brython 程式執行的結果, 都以 brython_div 作為切入位置  \n \n  導入 gearUtils-0.9.js Cango 齒輪繪圖程式庫  \n \n \n \n \n \n', 'tags': '', 'url': 'RUN.html'}, {'title': 'Work Process', 'text': '9/27~10/1 \n Created repositor and Token, download Inventor and Solvespace. \n \n 10/6 \n Increased Vedio Columns and Fatal List. \n \n 10/13 \n Ended the class challenge. \n https://github.com/mdecourse/cad2021/discussions/11 \n \n 10/14 \n Edited\xa0 little challenge code. \n \n 10/21\xa0 \n Re make RUN and Layout \n \n 10/24 \n Update information of the CAD1 and CAD2 Software introduce. \n \n 11/2 \n Recording SolveSpace download video and put on the webside. \n \n 11/11 \n fix video problem and upload Inventor and Solvespace operate videos. \n \n 11/11 \n upload\xa0 Inventor video. \n \n 12/16 \n upload four-bar mechanism W11. \n \n 12/16 \n upload Solvespace and Iventor work progress. \n \n 12/16 \n upload W13-2 Wink video. \n \n 12/16 \n upload W13-3 Wink video. \n \n 12/23 \n updata website version 1.4. \n \n 12/23 \n upload Wink tutorial video. \n \n 12/30 \n tried to make final\xa0project file. \n \n 1/6 \n final exam.1 version.1. \n \n 1/6 \n final exam.1 version.2. \n \n 1/6 \n push\xa0 final exam.1 version.2 again because failed. \n \n 1/6 \n change Wink\xa0absolute url files. \n \n 1/6 \n fix and push wink\xa0 absolute url files 3 times. \n \n \n 1/8 \n complete final exam.1. \n \n 1/8 \n change final exam.1 all wink absolute url files. \n \n 1/8 \n upload final exam.1 last version.', 'tags': '', 'url': 'Work Process.html'}, {'title': 'Github work process', 'text': 'https://github.com/40923240/cad2021_hw/commits/main', 'tags': '', 'url': 'Github work process.html'}, {'title': 'Tutorial video', 'text': '', 'tags': '', 'url': 'Tutorial video.html'}, {'title': 'Creat cad2021_hw repositories and token', 'text': '\n Tips \n \n', 'tags': '', 'url': 'Creat cad2021_hw repositories and token.html'}, {'title': 'Fatal List', 'text': '在下列作業中已知 \n 1. 啟動檔中所有的python395路徑, 原始設訂為python38,須將後面的數字38改為395 ,否則將無法開啟start_ipv4.bat(其實一開始就無法開啟了,但可以從start_ipv6.bat變更start_ipv4.bat的啟動檔設定) \n \n 2.發現git指令無法使用,需修改start_ipv4.bat的啟動檔設定, 將\\portablegit後添加_2.31.1 即可 \n \n 3.Token密鑰位置問題(黃紅標記處為個人Token密鑰,須放在此處),要注意密鑰後要加上@,然後要像是途中所示, 不能縮行、https://處不能有空格、@前不能有空格 \n \n 4. \n', 'tags': '', 'url': 'Fatal List.html'}, {'title': 'Wink', 'text': '\n EX: \n ----------------------------------------------------------------------------------- \n <script>// <![CDATA[ var winkVideoData = { dataVersion: 1, frameRate: 20, buttonFrameLength: 10, buttonFrameOffset: 5, frameStops: { }, }; // ]]></script> <div class="winkVideoContainerClass">< video width="1280" height="720"  class="winkVideoClass" data-dirname="./../cmsimde/static" data-varname="winkVideoData"> <source src="./../downloads/ 321123 .mp4" type="video/mp4" /></video> <div class="winkVideoOverlayClass"></div> <div class="winkVideoControlBarClass"><button class="winkVideoControlBarPlayButtonClass"></button> <button class="winkVideoControlBarPauseButtonClass"></button> <div class="winkVideoControlBarProgressLeftClass"></div> <div class="winkVideoControlBarProgressEmptyMiddleClass"><a href="https://www.youtube.com/watch?v=cxsqBbl2s_Q">https://www.youtube.com/watch?v=cxsqBbl2s_Q</a></div> <div class="winkVideoControlBarProgressEmptyMiddleClass"><iframe width="560" height="314" src="//www.youtube.com/embed/cxsqBbl2s_Q" allowfullscreen="allowfullscreen"></iframe></div> <div class="winkVideoControlBarProgressRightClass"></div> <div class="winkVideoControlBarProgressFilledMiddleClass"></div> <div class="winkVideoControlBarProgressThumbClass"></div> </div> <div class="winkVideoPlayOverlayClass"></div> </div> \n ----------------------------------------------------------------------------------- \n 以上可直接複製 \n !!!以下特殊反白的地方需要更改!!! \n 1. video width="1280" height="720" \n 這部分我已經幫你改好，表示的意思是你輸出影片的大小(影片2:26) \n 2. 321123 \n 這裡是檔名，照你Wink輸出影片的檔名打( 影片1:27 ) \n', 'tags': '', 'url': 'Wink.html'}, {'title': 'HW1', 'text': 'HW1 佔學期成績 25% \n HW1 必須在 2021.11.10 22:00 之前完成. \n HW1 具體項目成果回報區 將於 2021.09.23 開啟, 於  2021.11.10 22:00 關閉. \n 作業一: meArm Robot 零件繪圖與機電運動模擬場景製作 \n Step1 : 下載  meARM.7z  這個包含尚未完成組立的 meArm Robot 場景與雷射切割零件組立手冊. \n meArm_75-0040_v1.pdf  則是另外一本組立參考手冊. \n Step2 : 從課程網頁中的  Compile CoppeliaSim 頁面 , 下載  coppeliaSim 4.1.0 官方版與 MSYS2 編譯版.7z  (檔案大小 412 MB, 解開壓縮後 1GB) 可攜套件. \n Step3 : 在 HW1 中, 要求每一位學員透過程式亂數分配 (兩班實際亂數分配結果以上課時點擊下列按鈕所得結果為準) 所使用的兩套參數式 CAD 套件, 從軟體發展緣起開始進行介紹,\xa0 經過教育版軟體套件檔案的取得, 下載安裝以及配置使用. 根據 Step1 中的零件尺寸, 逐一完成 meArm Robot 各零件繪製與組立. 並將零件 匯入  CoppeliaSim 進行組裝配置後, 以  UI 介面 中的 slider 控制 meArm Robot 各軸的旋轉作動. \n 2b CAD 套件分配結果:  https://mde.tw/cad2021/downloads/online/2b_hw1_cad.txt \n 附件: \n 1. CAD 套件分配表: \n sw: Solidworks, inv: Inventor, nx: NX12, ons: Onshape, slvs: Solvespace \n 2a 套件亂數分配結果 \n 2b 套件亂數分配結果 \n 2. 在兩套 CAD 完成零件繪圖並轉入 CoppeliaSim 後, 為了建立 Dynamic Model 必須利用  shape edit modes  轉為  clean model , 並與實際轉入的 STL 格式零件外形結合應用後建立模擬場景 (scenes). \n 3. meARM Robot  動態模擬場景 的建構, 可參考  0 ,  1 ,  2 ,  3 ,  4 ,  5 ,  6 ,  7 , 也可參考  Uarm Robot model  與相關 影片 . \n 4. CoppeliaSim design dynamic simulations  說明頁面 . \n 5.  網際 Lua  程式執行. \n 6.  meArm.slvs ,  meArm_in_solvespace.slvs \n 7. UI 介面程式參考: \n function closeEventHandler(h)\n    sim.addLog(sim.verbosity_scriptinfos,\'Window \'..h..\' is closing...\')\n    simUI.hide(h)\nend\n\nfunction joint1_rotate(ui,id,newVal)\n    simUI.setLabelText(ui,3000,\'theta1 set to \'..newVal)\n    sim.setJointTargetPosition(joint1, newVal*deg)\nend\n\nfunction joint2_rotate(ui,id,newVal)\n    simUI.setLabelText(ui,3000,\'theta2 set to \'..newVal)\n    sim.setJointTargetPosition(joint2, newVal*deg)\nend\n\nfunction joint3_rotate(ui,id,newVal)\n    simUI.setLabelText(ui,3000,\'theta3 set to \'..newVal)\n    sim.setJointTargetPosition(joint3, newVal*deg)\nend\n\nfunction joint16_rotate(ui,id,newVal)\n    simUI.setLabelText(ui,3000,\'theta16 set to \'..newVal)\n    sim.setJointTargetPosition(joint16, newVal*deg)\n    sim.setJointTargetPosition(joint20, -newVal*deg)\nend\n\nfunction sysCall_init()\n    -- do some initialization here\n    joint1 = sim.getObjectHandle(\'motor1\')\n    joint2 = sim.getObjectHandle(\'motor2\')\n    joint3 = sim.getObjectHandle(\'motor3\')\n    joint16 = sim.getObjectHandle(\'motor16\')\n    joint20 = sim.getObjectHandle(\'motor20\')\n    i = 0\n    deg = math.pi/180\n    print(i)\n    xml = [[\n<ui closeable="true" on-close="closeEventHandler" resizable="true">\n    <label text="This is a demo of the CustomUI plugin. Browse through the tabs below to explore all the widgets that can be created with the plugin." wordwrap="true" />\n    <tabs>\n        <tab title="Numeric">a\n            <label text="Sliders can be oriented horizontally or vertically, and have optional properties that can be set (in the XML) such as minimum and maximum value." wordwrap="true" />\n            <label text="" id="3000" wordwrap="true" />\n            <label text="theta1" /> <hslider tick-position="above" tick-interval="1" \n            minimum="0" maximum="360" on-change="joint1_rotate" />\n            <label text="theta2" /> <hslider tick-position="above" tick-interval="1" \n            minimum="-90" maximum="65" on-change="joint2_rotate" />\n            <label text="theta3" /> <hslider tick-position="above" tick-interval="1" \n            minimum="-90" maximum="185" on-change="joint3_rotate" />\n            <label text="theta16" /> <hslider tick-position="above" tick-interval="1" \n            minimum="0" maximum="15" on-change="joint16_rotate" />\n        </tab>\n    </tabs>\n</ui>\n]]\n    ui=simUI.create(xml)\n    \nend \n \n (From:  2016_ADDITIVE MANUFACTURING PROCESSES FOR FABRICATING A MINI ROBOT - COMPUTATIONAL MODELS AND EXPERIMENTAL RESULTS.pdf ) \n \n -------------------------------------- \n', 'tags': '', 'url': 'HW1.html'}, {'title': 'W13', 'text': '1.目前零件進度 \n \n \n \n \n \n   \n \n \n \n \n \n \n \n \n ----------------------------------------------------------------------------------- \n 2. 第一軸模擬 \n \n \n \n   \n \n \n \n \n \n \n \n \n ---------------------------------------------------------------------------------- \n 3.二、三軸模擬: \n \n \n \n   \n \n \n \n \n \n \n \n \n', 'tags': '', 'url': 'W13.html'}, {'title': 'CAD1 Inventor', 'text': 'Inventor是由Jacob Sain於1999年開發，並於Window系統上運作，類型屬於Computer-Aided Design(電腦輔助設計)，其功能為藉由整合2D、3D之數據， \n 產生出一個虛擬的產品，可讓使用者在正式生產前檢驗商品的外觀、功能、屬性，並具有與其他CAD軟體轉檔的能力。 \n 該軟體有以下之特色: \n \n \n \n 資料來源:大塚資訊科技股份有限公司 \n \n', 'tags': '', 'url': 'CAD1 Inventor.html'}, {'title': '操作過程', 'text': '操作影片 \n', 'tags': '', 'url': '操作過程.html'}, {'title': 'CAD2\xa0SolveSpace', 'text': 'SolveSpace是一套免費且開源的CAD軟體，作者是 Jonathan Westhues與其他自願者 ，於2008年開發，作業環境跨足Windows、Linux和MacOS。 \n \n 其功能包括: \n 零件3D建模 -使用拉伸、旋轉、布爾運算進行繪圖。 \n 零件2D建模 -可先繪出單一零件，轉檔為DXF、PDF或SVG格式 \n ，再輔以3D模型組配。 \n 編輯CAM數據 -為水刀機或雷射切割機導出2D平面向量圖 \n ，或生成STEP或STL格式的檔案，或是導入第三方CAM程式裡。 \n 用於機構設計 -使用拘束計算器模擬出平面空間及空間連桿組內的銷 \n 、球關節、滑動關節。 \n 平面與實體幾何 -使用實時 輪廓圖繪製，替換手動求解之三角函數解與 \n 電子試算表。 \n \n \n 安裝配置 \n Solvespace 安裝配置 \n \n \n', 'tags': '', 'url': 'CAD2\xa0SolveSpace.html'}, {'title': '操作流程', 'text': '\n 操作影片 \n', 'tags': '', 'url': '操作流程.html'}, {'title': '運動場景', 'text': 'CAD1: \n CAD1 零件轉出後轉入 CoppeliaSim 操作影片 (Youtube) \n CAD1 零件轉入 CoppeliaSim 教學影片 (Wink) \n CAD1 轉入 Coppeliasim 教學影片 embedded 影片: 標題必須為「 NFU - MDE - cad2021 - 學號 - SW2020  零件轉入 CoppeliaSim 教學影片」且加上 語音說明 與 字幕. \n CAD2: \n CAD2 零件轉出後轉入 CoppeliaSim 操作影片 (Youtube) \n CAD2 零件轉入 CoppeliaSim 教學影片 (Wink) \n CAD2 轉入 Coppeliasim 教學影片 embedded 影片: 標題必須為「 NFU - MDE - cad2021 - 學號 - SW2020  零件轉入 CoppeliaSim 教學影片」且加上 語音說明 與 字幕. \n 若使用 Solidworks 2017 版, 則將 SW2020 換為 SW2017, 其他套件 INV2020 代表 AutoDesk Inventor 2020 版, 還有 Onshape 與 Solvespace 等套件名稱. \n', 'tags': '', 'url': '運動場景.html'}, {'title': 'W11', 'text': '', 'tags': '', 'url': 'W11.html'}, {'title': 'HW1-1', 'text': '\n 作業 1-1: Mirobot 機械手臂場景組合 \n 說明: meArm Robot 有四個自由度, 請根據 HW1 的零組件繪製組立與 CoppeliaSim 運動場景模擬, 延伸至  Task1-1  中六個自由度的 Mirobot 機械手臂. \n mirobot_part1_to_part5.7z  為取自 \xa0 https://github.com/wlkata/Mirobot-STL  的參考零件. 請利用場景中 Mirobot STL 零件, 組合為可以透過  UI 介面 中的 slider 控制各軸作動旋轉的運動模型. \n 請根據  Task1-1  中的說明, 完成各項指定任務. \n Only 50% \n', 'tags': '', 'url': 'HW1-1.html'}, {'title': 'HW2', 'text': 'HW2 佔學期成績 20% \n HW2 必須在 2021.12.22 22:00 之前完成. \n HW2 具體項目成果回報區 將於 2021.12.09 開啟, 於  2021.12.22 22:00 關閉. \n meArm 逆向運動學與網際參數式 CAD API 結合應用. \n 請將  https://github.com/mdecourse/meArm  中的 meArm Robot 逆向運動學程式, 改為 Lua 與 Python 程式, 使能套用至 HW1 所完成的 CoppeliaSim meArm 運動模擬場景. 並分別採 Lua, Legacy remote API 及 Bluezero remote API 逆向運動的方式進行控制. \n 請利用  Task2  中的 Solidworks, Inventor 與 NX API 程式控制 meArm Robot 零組件尺寸, 說明並討論如何透過網際程式控制 meArm Robot 的零件尺寸, 並結合上述逆向運動學程式庫, 使得自動化機電產品開發流程更容易滿足客製化需求. \n 參考: \n 2016_ADDITIVE MANUFACTURING PROCESSES FOR FABRICATING A MINI ROBOT - COMPUTATIONAL MODELS AND EXPERIMENTAL RESULTS.pdf \n Robot Manipulator Control with Inverse Kinematics PD-Pseudoinverse Jacobian and Forward Kinematics Denavit Hartenber.pdf \n KINEMATIC ANALYSIS FOR ROBOT ARM.pdf \n https://codebender.cc/user/MeArm \n https://github.com/mdecourse/meArmPi \n /downloads/MeArmPiTechnicalOverviewV0-3DRAFT.pdf \n https://github.com/mdecourse/me-arm-ik \n https://github.com/mdecourse/mearm_model \n https://courses.ece.cornell.edu/ece5990/ECE5725_Fall2016_Projects/pas324_ml634/index.html \n https://github.com/mdecourse/InefficientSkittleSorter \n https://mearm.com \n', 'tags': '', 'url': 'HW2.html'}, {'title': 'HW3', 'text': 'HW3 為選項作業. \n HW3 具體項目成果回報區 將於 2021.12.09 開啟, 於  2022.01.05 22:00 關閉 \n https://mde.tw/cad2021/content/Task3.html \xa0 \n https://mde.tw/cad2021/content/Task4.html \n https://mde.tw/cad2021/content/Task5.html \n https://mde.tw/cad2021/content/Task6.html \n https://mde.tw/cad2021/content/Task7.html \n 請從上列 Tasks 中自行選擇項目內容完成 HW3. \n', 'tags': '', 'url': 'HW3.html'}, {'title': 'Final Project', 'text': 'Final exam.1 \n ---------------------------------------------------------------------------------- \n (A) Coppleliasim Dynamic Scene \n \n \n \n \n   \n \n \n \n \n \n \n \n \n ---------------------------------------------------------------------------------- \n (A) assembly drawing \n \n \n \n \n \n   \n \n \n \n \n \n \n \n \n ---------------------------------------------------------------------------------- \n (A) parts drawings \n \n \n \n \n \n   \n \n \n \n \n \n \n \n \n ---------------------------------------------------------------------------------- \n (B) Coppleliasim Dynamic Scene \n \n \n \n   \n \n \n \n \n \n \n \n \n ---------------------------------------------------------------------------------- \n (B)assembly drawing \n \n \n \n   \n \n \n \n \n \n \n \n \n ---------------------------------------------------------------------------------- \n 心得 \n 這學期學到了Invertor跟Solvespace的操作方法，也學會Coppeliasim，中間還遇到很多同學倉儲崩潰的，我也解決了他們的問題，現在也有最後的分組合作，擔任組長同意組員的pull request，最後我認為依靠之前所學的，我可以建造一個屬於自己的Github倉儲與網站。', 'tags': '', 'url': 'Final Project.html'}]};